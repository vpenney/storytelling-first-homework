{"version":3,"sources":["12-chart.js"],"names":["margin","width","height","svg","d3","select","append","attr","xPositionScale","scaleLinear","domain","range","colorScale","scaleOrdinal","sqrtScale","scaleSqrt","ready","datapoints","selectAll","data","enter","d","hotdogs","animal","hamburgers","xAxis","axisBottom","ticks","call","csv","require","then","catch","err","log"],"mappings":";;;CACA,WAGMA,IAAAA,EACG,GADHA,EAEK,GAFLA,EAGM,GAHNA,EAII,GAGJC,EAAQ,IAAMD,EAAcA,EAE5BE,EAAS,IAAMF,EAAaA,EAE5BG,EAAMC,GACPC,OAAO,YACPC,OAAO,OACPC,KAAK,QAASN,EAAQD,EAAcA,GACpCO,KAAK,SAAUL,EAASF,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAa,KAG/DQ,EAAiBJ,GAAGK,cACvBC,OAAO,CAAC,EAAG,KACXC,MAAM,CAAC,EAAGV,IAEPW,EAAaR,GAAGS,eACnBH,OAAO,CAAC,MAAO,MAAO,QACtBC,MAAM,CAAC,UAAW,UAAW,YAE1BG,EAAYV,GAAGW,YAClBL,OAAO,CAAC,EAAG,KACXC,MAAM,CAAC,EAAG,KAQJK,SAAAA,EAAOC,GAGXC,EAAAA,UAAU,UACVC,KAAKF,GACLG,QAAQd,OAAO,UACfC,KAAK,IAAK,SAAK,GACPO,OAAAA,EAAUO,EAAEC,WAEpBf,KAAK,OAAQ,SAAK,GACVK,OAAAA,EAAWS,EAAEE,UAErBhB,KAAK,KAAM,SAAK,GACRC,OAAAA,EAAea,EAAEG,cAEzBjB,KAAK,MAAOL,EAAS,IAAM,GAC3BK,KAAK,UAAW,KAEfkB,IAAAA,EAAQrB,GAAGsB,WAAWlB,GAAgBmB,MAAM,IAG7CrB,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBL,EAAS,KAC5C0B,KAAKH,GA9BPI,GAAAA,IAAIC,QAAQ,sBAAsBC,KAAKf,GACvCe,KAAKf,GACLgB,MAAM,SAAUC,GACPC,QAAAA,IAAI,cAAeD,KAtCjC","file":"12-chart.542a9c8a.map","sourceRoot":"../src","sourcesContent":["/* global d3 */\n(function () {\n  // Build your SVG here\n  // using all of that cut-and-paste magic\n  var margin = {\n    top: 20,\n    right: 20,\n    bottom: 20,\n    left: 20\n  }\n\n  var width = 400 - margin.left - margin.right\n\n  var height = 200 - margin.top - margin.bottom\n\n  var svg = d3\n    .select('#chart12')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n  // Build your scales here\n  const xPositionScale = d3.scaleLinear()\n    .domain([0, 10])\n    .range([0, width])\n\n  const colorScale = d3.scaleOrdinal()\n    .domain(['cat', 'cow', 'dog'])\n    .range(['#a6cee3', '#1f78b4', '#b2df8a'])\n\n  const sqrtScale = d3.scaleSqrt()\n    .domain([0, 10])\n    .range([0, 50])\n\n  d3.csv(require('./eating-data.csv')).then(ready)\n    .then(ready)\n    .catch(function (err) {\n      console.log('Failed with', err)\n    })\n\n  function ready (datapoints) {\n    // Add and style your marks here\n    svg\n      .selectAll('circle')\n      .data(datapoints)\n      .enter().append('circle')\n      .attr('r', d => {\n        return sqrtScale(d.hotdogs)\n      })\n      .attr('fill', d => {\n        return colorScale(d.animal)\n      })\n      .attr('cx', d => {\n        return xPositionScale(d.hamburgers)\n      })\n      .attr('cy', (height + 40) / 2)\n      .attr('opacity', 0.25)\n\n    var xAxis = d3.axisBottom(xPositionScale).ticks(11)\n\n    svg\n      .append('g')\n      .attr('class', 'axis x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n  }\n})()\n"]}