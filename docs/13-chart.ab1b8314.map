{"version":3,"sources":["13-chart.js"],"names":["margin","width","height","svg","d3","select","append","attr","widthScale","scaleLinear","domain","range","scaleBand","colorScale","scaleOrdinal","csv","then","ready","datapoints","names","map","d","name","selectAll","data","enter","hamburgers","animal","yAxis","axisLeft","call","xAxis","axisBottom","catch","err","log"],"mappings":";CACA,WAGMA,IAAAA,EACG,GADHA,EAEK,GAFLA,EAGM,GAHNA,EAII,GAGJC,EAAQ,IAAMD,EAAcA,EAE5BE,EAAS,IAAMF,EAAaA,EAE5BG,EAAMC,GACPC,OAAO,YACPC,OAAO,OACPC,KAAK,QAASN,EAAQD,EAAcA,GACpCO,KAAK,SAAUL,EAASF,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAe,KAGjEQ,EAAaJ,GAAGK,cACnBC,OAAO,CAAC,EAAG,KACXC,MAAM,CAAC,EAAGV,IAEPW,EAAYR,GAAGQ,YAClBD,MAAM,CAACT,EAAQ,IAEZW,EAAaT,GAAGU,eACnBJ,OAAO,CAAC,MAAO,MAAO,QACtBC,MAAM,CAAC,UAAW,UAAW,YAE7BI,GAAAA,IAAI,mBACJC,KAKMC,SAAOC,GAEVC,IAAAA,EAAQD,EAAWE,IAAI,SAAUC,GAAYA,OAAAA,EAAEC,OAEzCZ,EAAAA,OAAOS,GAGdI,EAAAA,UAAU,QACVC,KAAKN,GACLO,QAAQnB,OAAO,QACfC,KAAK,SAAU,IACfA,KAAK,QAAS,SAAK,GACXC,OAAAA,EAAWa,EAAEK,cAErBnB,KAAK,IAAK,SAAK,GACPK,OAAAA,EAAUS,EAAEC,QAEpBf,KAAK,OAAQ,SAAK,GACVM,OAAAA,EAAWQ,EAAEM,UAGpBC,IAAAA,EAAQxB,GAAGyB,SAASjB,GAErBN,EAAAA,OAAO,KACPC,KAAK,QAAS,eACduB,KAAKF,GAEJG,IAAAA,EAAQ3B,GAAG4B,WAAWxB,GAEvBF,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBL,EAAS,KAC5C4B,KAAKC,KApCPE,MAAM,SAAUC,GACPC,QAAAA,IAAI,cAAeD,KArCjC","file":"13-chart.ab1b8314.map","sourceRoot":"../src","sourcesContent":["/* global d3 */\n(function () {\n  // Build your SVG here\n  // using all of that cut-and-paste magic\n  var margin = {\n    top: 40,\n    right: 20,\n    bottom: 40,\n    left: 65\n  }\n\n  var width = 410 - margin.left - margin.right\n\n  var height = 450 - margin.top - margin.bottom\n\n  var svg = d3\n    .select('#chart13')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.right + ')')\n\n  // Build your scales here\n  const widthScale = d3.scaleLinear()\n    .domain([0, 10])\n    .range([0, width])\n\n  const scaleBand = d3.scaleBand()\n    .range([height, 0])\n\n  const colorScale = d3.scaleOrdinal()\n    .domain(['cat', 'cow', 'dog'])\n    .range(['#a6cee3', '#1f78b4', '#b2df8a'])\n\n  d3.csv('eating-data.csv')\n    .then(ready)\n    .catch(function (err) {\n      console.log('Failed with', err)\n    })\n\n  function ready (datapoints) {\n    // Add and style your marks here\n    var names = datapoints.map(function (d) { return d.name })\n\n    scaleBand.domain(names)\n\n    svg\n      .selectAll('rect')\n      .data(datapoints)\n      .enter().append('rect')\n      .attr('height', 50)\n      .attr('width', d => {\n        return widthScale(d.hamburgers)\n      })\n      .attr('y', d => {\n        return scaleBand(d.name)\n      })\n      .attr('fill', d => {\n        return colorScale(d.animal)\n      })\n\n    var yAxis = d3.axisLeft(scaleBand)\n    svg\n      .append('g')\n      .attr('class', 'axis y-axis')\n      .call(yAxis)\n\n    var xAxis = d3.axisBottom(widthScale)\n    svg\n      .append('g')\n      .attr('class', 'axis x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n  }\n})()\n"]}