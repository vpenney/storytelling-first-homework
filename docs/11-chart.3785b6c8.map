{"version":3,"sources":["11-chart.js"],"names":["margin","width","height","svg","d3","select","append","attr","xPositionScale","scaleLinear","domain","range","yPositionScale","scalePoint","csv","then","ready","datapoints","selectAll","data","enter","d","hamburgers","animal","yAxis","axisLeft","call","remove","xAxis","axisBottom","ticks","catch","err","log"],"mappings":";CACA,WAGMA,IAAAA,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GAEjDC,EAAQ,IAAMD,EAAcA,EAE5BE,EAAS,IAAMF,EAAaA,EAE5BG,EAAMC,GACPC,OAAO,YACPC,OAAO,OACPC,KAAK,QAASN,EAAQD,EAAcA,GACpCO,KAAK,SAAUL,EAASF,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAa,KAG/DQ,EAAiBJ,GAAGK,cACvBC,OAAO,CAAC,EAAG,KACXC,MAAM,CAAC,EAAGV,IAEPW,EAAiBR,GAAGS,aACvBH,OAAO,CAAC,GAAI,MAAO,MAAO,MAAO,MACjCC,MAAM,CAACT,EAAQ,IAEfY,GAAAA,IAAI,mBACJC,KAKMC,SAAOC,GAGXC,EAAAA,UAAU,UACVC,KAAKF,GACLG,QAAQd,OAAO,UACfC,KAAK,IAAK,GACVA,KAAK,OAAQ,WACbA,KAAK,KAAM,SAAK,GACRC,OAAAA,EAAea,EAAEC,cAEzBf,KAAK,KAAM,SAAK,GACRK,OAAAA,EAAeS,EAAEE,UAGxBC,IAAAA,EAAQpB,GACTqB,SAASb,GAETN,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdmB,KAAKF,GAELnB,GAAAA,OAAO,mBAAmBsB,SAEzBC,IAAAA,EAAQxB,GAAGyB,WAAWrB,GAAgBsB,MAAM,GAG7CxB,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBL,EAAS,KAC5CwB,KAAKE,KAlCPG,MAAM,SAAUC,GACPC,QAAAA,IAAI,cAAeD,KA7BjC","file":"11-chart.3785b6c8.map","sourceRoot":"../src","sourcesContent":["/* global d3 */\n(function () {\n  // Build your SVG here\n  // using all of that cut-and-paste magic\n  var margin = { top: 40, right: 40, bottom: 40, left: 40 }\n\n  var width = 400 - margin.left - margin.right\n\n  var height = 400 - margin.top - margin.bottom\n\n  var svg = d3\n    .select('#chart11')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n  // Build your scales here\n  const xPositionScale = d3.scaleLinear()\n    .domain([0, 10])\n    .range([0, width])\n\n  const yPositionScale = d3.scalePoint()\n    .domain(['', 'cat', 'cow', 'dog', ' '])\n    .range([height, 0])\n\n  d3.csv('eating-data.csv')\n    .then(ready)\n    .catch(function (err) {\n      console.log('Failed with', err)\n    })\n\n  function ready (datapoints) {\n    // Add and style your marks here\n    svg\n      .selectAll('circle')\n      .data(datapoints)\n      .enter().append('circle')\n      .attr('r', 7)\n      .attr('fill', '#FFB6C1')\n      .attr('cx', d => {\n        return xPositionScale(d.hamburgers)\n      })\n      .attr('cy', d => {\n        return yPositionScale(d.animal)\n      })\n\n    var yAxis = d3\n      .axisLeft(yPositionScale)\n    svg\n      .append('g')\n      .attr('class', 'axis y-axis')\n      .call(yAxis)\n\n    d3.select('.y-axis .domain').remove()\n\n    var xAxis = d3.axisBottom(xPositionScale).ticks(7)\n\n    svg\n      .append('g')\n      .attr('class', 'axis x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n  }\n})()\n"]}